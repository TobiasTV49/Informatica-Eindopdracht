[gd_scene load_steps=5 format=3 uid="uid://53grnwnr4rie"]

[ext_resource type="Texture2D" uid="uid://c4snuhiqix0ih" path="res://icon.svg" id="2_0qmmn"]

[sub_resource type="GDScript" id="GDScript_3cn3p"]
script/source = "extends CharacterBody2D

var attacking
@onready var player: CharacterBody2D = $\"../Player\"

const SPEED = 25

func _ready() -> void:
	attacking = false

func _physics_process(delta: float) -> void:
	if Global.player_death == false:
		#look_at(player.position)
		if attacking == false:
			velocity = (player.position - position).normalized() * SPEED
		else:
			velocity = Vector2(0, 0)
	#	elif attacking == true:
	#		velocity = Vector2(0, 0)
	#		await get_tree().create_timer(1).timeout
	#		Global.player_health -= 10
	#		print(\"balls\")

	move_and_slide()


func _on_attack_range_body_entered(body: Node2D) -> void:
	if body.name == \"Player\":
		attacking = true
		$Attacktimer.start()

func _on_attack_range_body_exited(body: Node2D) -> void:
	if body.name == \"Player\":
		attacking = false
		$Attacktimer.stop()


func _on_attacktimer_timeout() -> void:
	print(\"RangedAttack\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_3gphb"]
size = Vector2(30, 30)

[sub_resource type="CircleShape2D" id="CircleShape2D_gcqi8"]
radius = 181.069

[node name="RangedEnemy" type="CharacterBody2D"]
position = Vector2(23, 23)
script = SubResource("GDScript_3cn3p")

[node name="Sprite2D" type="Sprite2D" parent="."]
scale = Vector2(0.25, 0.25)
texture = ExtResource("2_0qmmn")

[node name="Collision" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_3gphb")

[node name="AttackRange" type="Area2D" parent="."]

[node name="RangeShape" type="CollisionShape2D" parent="AttackRange"]
shape = SubResource("CircleShape2D_gcqi8")

[node name="Attacktimer" type="Timer" parent="."]

[connection signal="body_entered" from="AttackRange" to="." method="_on_attack_range_body_entered"]
[connection signal="body_exited" from="AttackRange" to="." method="_on_attack_range_body_exited"]
[connection signal="timeout" from="Attacktimer" to="." method="_on_attacktimer_timeout"]
